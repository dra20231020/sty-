{"value":{"content":"<><div className=\"markdown\"><h2 id=\"title-alert-警告提示navtitle-组件order-2grouptitle-反馈order-1\"><a aria-hidden=\"true\" tabIndex=\"-1\" href=\"#title-alert-警告提示navtitle-组件order-2grouptitle-反馈order-1\"><span className=\"icon icon-link\" /></a>{\"title: Alert 警告提示\\nnav:\\ntitle: 组件\\norder: 2\\ngroup:\\ntitle: 反馈\\norder: 1\"}</h2><h1 id=\"alert-警告提示\"><a aria-hidden=\"true\" tabIndex=\"-1\" href=\"#alert-警告提示\"><span className=\"icon icon-link\" /></a>{\"Alert 警告提示\"}</h1><p>{$$contentTexts[0].value}</p><h2 id=\"代码演示\"><a aria-hidden=\"true\" tabIndex=\"-1\" href=\"#代码演示\"><span className=\"icon icon-link\" /></a>{\"代码演示\"}</h2><h3 id=\"基本用法\"><a aria-hidden=\"true\" tabIndex=\"-1\" href=\"#基本用法\"><span className=\"icon icon-link\" /></a>{\"基本用法\"}</h3></div><DumiDemo {...{\n  \"demo\": {\n    \"id\": \"tycontainer-demo-basic\"\n  },\n  \"previewerProps\": {\n    \"filename\": \"src/tycontainer/demo/basic.tsx\"\n  }\n}} /></>","meta":{"embeds":[],"frontmatter":{"title":"Alert 警告提示","toc":"menu","filename":"src/tycontainer/index.md","atomId":"tycontainer","lastUpdated":1757660141809,"description":"警告提示，展现需要关注的信息。"},"demos":[{"id":"tycontainer-demo-basic","component":"React.memo(React.lazy(() => import( /* webpackChunkName: \"tycontainer__demos\" */ '/Users/ruhnn/项目测试/happy-ui/src/tycontainer/demo/basic.tsx?techStack=react')))","asset":{"type":"BLOCK","id":"tycontainer-demo-basic","refAtomIds":["tycontainer"],"dependencies":{"index.tsx":{"type":"FILE","value":"import React from \"react\";\nimport './style'\nimport TyContainer from \"../index\";\n\nexport default ()=>(\n\n    <TyContainer \n        style={{\n            width: '100%',\n            height: 500,\n        }}\n        headStyle={{\n            backgroundColor: '#fff'\n        }}\n        contentStyle={{\n            padding: 20\n        }}\n        renderType=\"model\"\n        showCloseIcon={true}\n        headerLeft={<div>头部左侧</div>}\n        headerRight={<div>头部右侧</div>}\n        content={<div>内容区</div>}\n        className=\"\"\n     \n    />\n)"},"react":{"type":"NPM","value":"19.1.1"},"../index.tsx":{"type":"FILE","value":"import React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport Header from \"./componets/Header\";\n\n\nexport interface TyContainerProps {\n    style?: React.CSSProperties;\n    headStyle?: React.CSSProperties;\n    contentStyle?: React.CSSProperties;\n    renderType?: string;\n    showCloseIcon?: boolean;\n    headerLeft?: any;\n    headerRight?: any;\n    content?: any;\n    className?: string;\n    breadCrumb?: any;\n    onClose?: () => void;\n}\n\nconst TyContainer: React.FC<TyContainerProps> = (\n\n    {\n        style, // 覆盖外层容器样式\n        headStyle,//覆盖头部容器样式\n        contentStyle, //覆盖内容区样式\n        renderType, //控制渲染类型  model为弹窗，其余为页面\n        showCloseIcon, // 弹窗显示关闭按钮  \n        headerLeft,  // 头部左侧内容\n        headerRight, // 头部右侧内容\n        content,//内容区\n        className, // 覆盖元素样式\n        breadCrumb, // 面包屑  \n        onClose // 关闭弹窗回调函数 \n\n    }\n) => {\n\n    const [outSideOpen, setOutSideOpen] = useState(false) // 动态给外部容器添加样式\n    const [contentOpen, setContentOpen] = useState(false) // 动态给内容区添加样式\n    // 初始化样式添加动画效果\n    useEffect(() => {\n        setOutSideOpen(true)\n        setTimeout(() => {\n            setContentOpen(true)\n        }, 100)\n    }, [])\n    const isModel = renderType === 'model'\n    const runAddOutsideClass = useMemo(() => {\n        return (\n            [\n                'commonContainer',\n                (outSideOpen) && 'commonContainer-open',\n                (isModel && !outSideOpen) && 'commonContainer-event-none'\n            ].filter(Boolean).join('')\n        )\n    }, [])\n    const runAddContentClass = useMemo(() => {\n        return (\n            [\n                'commonContainer-body',\n                (contentOpen) && 'commonContainer-body-open',\n                (isModel && !contentOpen) && 'commonContainer-body-event-none'\n            ].filter(Boolean).join('')\n        )\n    }, [])\n    const handleModalClose = useCallback(\n        () => {\n            setContentOpen(false)\n            setTimeout(() => {\n                setOutSideOpen(false)\n                onClose && onClose()\n            },\n                isModel ? 400 : 0 // 弹窗关闭动画时长为400ms\n            )\n        }, []\n    )\n    // 浏览器历史记录默认后退\n    const handleBack = () => {\n        window.history.back();\n    }\n    return (\n        <div className={runAddOutsideClass} >\n            <div className={runAddContentClass} style={style}>\n                <div className='commonContainer-body-header' style={headStyle}>\n                    {breadCrumb ? <div className='breadCrumb'> {breadCrumb}</div> : ''}\n                    {(headerLeft || headerRight) && <Header\n                        headerLeft={headerLeft}\n                        headerRight={headerRight}\n                        showCloseIcon={isModel && showCloseIcon}\n                        onHeaderCloseIconClick={handleModalClose || handleBack}\n                    />}\n                </div>\n                <div className='commonContainer-body-content' style={contentStyle}>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default TyContainer;"},"./style.ts":{"type":"FILE","value":""},"./componets/Header.tsx":{"type":"FILE","value":"import React, { ReactNode, useMemo } from 'react';\nimport { CloseOutlined } from '@ant-design/icons';\n\ninterface HeaderProps {\n    headerLeft?: ReactNode\n    headerRight?: ((buttons: { headerCloseIcon: ReactNode }) => ReactNode) | null\n    showCloseIcon?: boolean\n    onHeaderCloseIconClick?: (() => void) | undefined\n}\nconst Header: React.FC<HeaderProps> = ({\n    headerLeft = null,\n    headerRight = null,\n    showCloseIcon = false,\n    onHeaderCloseIconClick = undefined,\n}) => {\n\n    const headerCloseIcon = useMemo(() => (\n        <CloseOutlined className='commonContainer-body-header-closeIcon' onClick={onHeaderCloseIconClick} />\n    ), [])\n    // 后续会有新增的icon或者按钮都集成buttons对象中，此处先预留出来\n    const buttons = useMemo(() => (\n        {\n            headerCloseIcon\n        }\n    ), [])\n    const rightDom = useMemo(() => {\n        if (headerRight) {\n            return (\n                <>\n                    {\n                        ((typeof headerRight === 'function') ?\n                            (headerRight as (buttons: { headerCloseIcon: ReactNode }) => ReactNode)(\n                                {\n                                    ...buttons\n                                }\n                            ) : null)\n                    }\n                    {\n                        (showCloseIcon ? buttons.headerCloseIcon : null)\n                    }\n                </>\n            )\n        }\n\n        return showCloseIcon ? buttons.headerCloseIcon : null\n    }, [headerRight, buttons])\n    return (\n        <>\n            <div className='commonContainer-body-header-left'>\n                {headerLeft}\n            </div>\n            <div className='commonContainer-body-header-right'>\n                {rightDom}\n            </div>\n        </>\n    )\n}\n\n\n\nexport default Header"},"@ant-design/icons":{"type":"NPM","value":"5.6.1"}},"entry":"index.tsx"},"resolveMap":{"index.tsx":"/Users/ruhnn/项目测试/happy-ui/src/tycontainer/demo/basic.tsx","react":"react","../index.tsx":"/Users/ruhnn/项目测试/happy-ui/src/tycontainer/index.tsx","./style.ts":"/Users/ruhnn/项目测试/happy-ui/src/tycontainer/demo/style/index.ts","./componets/Header.tsx":"/Users/ruhnn/项目测试/happy-ui/src/tycontainer/componets/Header/index.tsx","@ant-design/icons":"@ant-design/icons"},"renderOpts":{"compilePath":"/Users/ruhnn/项目测试/happy-ui/node_modules/dumi/dist/client/misc/reactDemoCompiler.js"}}],"toc":[{"id":"title-alert-警告提示navtitle-组件order-2grouptitle-反馈order-1","depth":2,"title":"title: Alert 警告提示\nnav:\ntitle: 组件\norder: 2\ngroup:\ntitle: 反馈\norder: 1"},{"id":"alert-警告提示","depth":1,"title":"Alert 警告提示"},{"id":"代码演示","depth":2,"title":"代码演示"},{"id":"基本用法","depth":3,"title":"基本用法"}],"texts":[{"value":"警告提示，展现需要关注的信息。","paraId":0,"tocIndex":1}]}},"type":"Object","created":"2025-09-12T06:55:41.834Z","ttl":0}